apiVersion: v1
kind: Namespace
metadata:
  name: postgres-db

# Secrets Config
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: postgres-db
  labels:
    app: postgres
type: Opaque
data:
  POSTGRES_USERNAME: <base64-encoded-username>
  POSTGRES_PASSWORD: <base64-encoded-password>
  POSTGRES_DB: <base64-encoded-db-name>
---
# Persistent Volume Config
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
  namespace: postgres-db
  labels:
    app: postgres
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mnt/data/postgresql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: postgres-db
  labels:
    app: postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

# Service account definition
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgres-sa
  namespace: postgres-db

# Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: postgres-db
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      serviceAccountName: postgres-sa
      containers:
        - name: postgres
          image: postgres:9.6 # or LTS stable version
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret # secret reference
                  key: POSTGRES_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: postgres-db
spec:
  selector:
    app: postgres # Matches label in deployment
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 30432
  type: NodePort
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: postgres-db
  name: postgres-role
rules:
  - apiGroups: [""]
    resources: ["pods", "secrets", "services", "persistentvolumes", "persistentvolumeclaims"]
    verbs: ["get", "list", "create", "update", "delete"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "create", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: postgres-rolebinding
  namespace: postgres-db
subjects:
  - kind: ServiceAccount
    name: postgres-sa
    namespace: postgres-db
roleRef:
  kind: Role
  name: postgres-role
  apiGroup: rbac.authorization.k8s.io
